<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.song.dao.IUserDao">
  <resultMap id="BaseResultMap" type="com.song.model.userEntity">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="resume_id" jdbcType="INTEGER" property="resumeId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="age" jdbcType="VARCHAR" property="age" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="birth_day" jdbcType="DATE" property="birthDay" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="phone_number" jdbcType="INTEGER" property="phoneNumber" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="salary" property="salary" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, role_id, parent_id, resume_id, user_name, age, password, state, gender, 
    email, birth_day, education, phone_number, create_time,reason,salary
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  
  <select id="find" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where role_id = #{roleId}
    and user_name= #{userName}
    and password = #{password}
  </select>
  
  <select id="getEmpById" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where user_id = #{param1}
  </select>
  
  <select id="checkUser" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where user_name = #{param1}
  </select>
  
  <select id="findAllEmps" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where parent_id = #{postId}
  </select>
  
  <select id="findByName" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where user_name like concat('%',#{name},'%')
    and role_id in (2,3,4)
  </select>
  
  <select id="findEmpByRoleId" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where role_id = 2
  </select>
  
  <select id="findAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
  </select>
  
  <select id="findByNameAndState" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where user_name like concat('%',#{param1},'%')
    and state = #{param2}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.song.model.userEntity">
    insert into t_user (user_id, role_id, parent_id, 
      resume_id, user_name, age, 
      password, state, gender, 
      email, birth_day, education, 
      phone_number, create_time, reason,salary)
    values (#{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, 
      #{resumeId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{age,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{birthDay,jdbcType=DATE}, #{education,jdbcType=VARCHAR}, 
      #{phoneNumber,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{reason,jdbcType=VARCHAR}, #{salary})
  </insert>
  <insert id="insertSelective" parameterType="com.song.model.userEntity">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="resumeId != null">
        resume_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="birthDay != null">
        birth_day,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="salary != null">
      	salary,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="resumeId != null">
        #{resumeId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="birthDay != null">
        #{birthDay,jdbcType=DATE},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        #{salary},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.song.model.userEntity">
    update t_user
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="resumeId != null">
        resume_id = #{resumeId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="birthDay != null">
        birth_day = #{birthDay,jdbcType=DATE},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=TIMESTAMP},
      </if>
      <if test="salary != null">
      	salary = #{salary},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.song.model.userEntity">
    update t_user
    set role_id = #{roleId,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      resume_id = #{resumeId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      age = #{age,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      birth_day = #{birthDay,jdbcType=DATE},
      education = #{education,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      reason = #{reason,jdbcType=TIMESTAMP}
      salary = #{salary}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>